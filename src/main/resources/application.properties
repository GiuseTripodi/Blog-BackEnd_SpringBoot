spring.datasource.url=jdbc:mysql://localhost:3306/blog_progetto_sistemi_distribuiti
spring.datasource.username=root
spring.datasource.password=Giuseppe98
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update
spring.session.jdbc.initialize-schema= always

#con l'annotazione sotto indicata escludo l'auto-configuration della sicurezza dell'applicazione
#spring boot. In questo modo posso fare qualsiasi tipo di richiesta senza effettivamente controllare
#l'autenticazioen del mittente, questo è utile in fase di sviluppo
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.SecurityAutoConfiguration

#Guardare il link sotto per capire perchè aggiunto questo codice sotto
#https://stackoverflow.com/questions/56102676/java-sql-sqlsyntaxerrorexception-unknown-column-jpa-entity-issue
spring:
jpa:
hibernate:
naming:
physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl

#aggiungo le informazioni per utilizzare okta
okta.oauth2.issuer=https://dev-399569.okta.com/oauth2/default
okta.oauth2.client-id=0oa3msvbu07UBzn0q4x7
okta.oauth2.client-secret=rJ7Nq02Nqg8EJtFSftVZpo-pCaLCLvS30eIUlWcn
okta.oauth2.redirect-uri=http://localhost:4200/implicit/callback
